{"ast":null,"code":"import axios from'axios';import mockData from'../data/mockData.json';const API_BASE_URL=process.env.REACT_APP_API_BASE_URL||(process.env.NODE_ENV==='production'?'/api':'http://localhost:5001');const api=axios.create({baseURL:API_BASE_URL,timeout:10000,headers:{'Content-Type':'application/json'}});// Fallback to static data if backend is not available\nlet useStaticData=false;const checkBackendAvailable=async()=>{try{await api.get('/',{timeout:2000});return true;}catch(error){console.log('Backend not available, using static data');useStaticData=true;return false;}};// Initialize backend check\ncheckBackendAvailable();// Helper to get data with fallback\nconst getDataWithFallback=async(endpoint,staticDataPath)=>{if(useStaticData){const data=staticDataPath.split('.').reduce((obj,key)=>obj===null||obj===void 0?void 0:obj[key],mockData);return{data};}try{return await api.get(endpoint);}catch(error){console.log(\"API error for \".concat(endpoint,\", falling back to static data\"));useStaticData=true;const data=staticDataPath.split('.').reduce((obj,key)=>obj===null||obj===void 0?void 0:obj[key],mockData);return{data};}};// Request interceptor for logging\napi.interceptors.request.use(config=>{if(!useStaticData){var _config$method;console.log(\"Making \".concat((_config$method=config.method)===null||_config$method===void 0?void 0:_config$method.toUpperCase(),\" request to \").concat(config.url));}return config;},error=>{console.error('Request error:',error);return Promise.reject(error);});// Response interceptor for error handling\napi.interceptors.response.use(response=>{return response;},error=>{console.error('API Error:',error.message);if(error.code==='ECONNREFUSED'||error.code==='NETWORK_ERROR'){useStaticData=true;}return Promise.reject(error);});const apiService={// Analysis endpoints\ngetAnalysisOverview:()=>getDataWithFallback('/api/analysis/overview','overview'),getEventPerformance:()=>getDataWithFallback('/api/analysis/event-performance','event_performance'),getStandPerformance:()=>getDataWithFallback('/api/analysis/stand-performance','stand_performance'),// Predictions\ngetMarch5Predictions:()=>getDataWithFallback('/api/predictions/march5','march5_predictions'),// Staffing\ngetStaffingRecommendations:()=>getDataWithFallback('/api/staffing/recommendations','staffing_recommendations'),// Risk assessment\ngetRiskAssessment:()=>getDataWithFallback('/api/risk-assessment','risk_assessment'),// Historical data\ngetHistoricalData:()=>getDataWithFallback('/api/historical-data','historical_data'),// Health check\nhealthCheck:async()=>{if(useStaticData){return{data:{status:'ok',message:'Using static data',mode:'static'}};}try{return await api.get('/');}catch(error){useStaticData=true;return{data:{status:'ok',message:'Using static data',mode:'static'}};}}};export default apiService;","map":{"version":3,"names":["axios","mockData","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","NODE_ENV","api","create","baseURL","timeout","headers","useStaticData","checkBackendAvailable","get","error","console","log","getDataWithFallback","endpoint","staticDataPath","data","split","reduce","obj","key","concat","interceptors","request","use","config","_config$method","method","toUpperCase","url","Promise","reject","response","message","code","apiService","getAnalysisOverview","getEventPerformance","getStandPerformance","getMarch5Predictions","getStaffingRecommendations","getRiskAssessment","getHistoricalData","healthCheck","status","mode"],"sources":["/Users/marcomontenegro/dataanalysis/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\nimport mockData from '../data/mockData.json';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL \n  || (process.env.NODE_ENV === 'production' \n    ? '/api'\n    : 'http://localhost:5001');\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Fallback to static data if backend is not available\nlet useStaticData = false;\n\nconst checkBackendAvailable = async () => {\n  try {\n    await api.get('/', { timeout: 2000 });\n    return true;\n  } catch (error) {\n    console.log('Backend not available, using static data');\n    useStaticData = true;\n    return false;\n  }\n};\n\n// Initialize backend check\ncheckBackendAvailable();\n\n// Helper to get data with fallback\nconst getDataWithFallback = async (endpoint, staticDataPath) => {\n  if (useStaticData) {\n    const data = staticDataPath.split('.').reduce((obj, key) => obj?.[key], mockData);\n    return { data };\n  }\n  \n  try {\n    return await api.get(endpoint);\n  } catch (error) {\n    console.log(`API error for ${endpoint}, falling back to static data`);\n    useStaticData = true;\n    const data = staticDataPath.split('.').reduce((obj, key) => obj?.[key], mockData);\n    return { data };\n  }\n};\n\n// Request interceptor for logging\napi.interceptors.request.use(\n  (config) => {\n    if (!useStaticData) {\n      console.log(`Making ${config.method?.toUpperCase()} request to ${config.url}`);\n    }\n    return config;\n  },\n  (error) => {\n    console.error('Request error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor for error handling\napi.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    console.error('API Error:', error.message);\n    if (error.code === 'ECONNREFUSED' || error.code === 'NETWORK_ERROR') {\n      useStaticData = true;\n    }\n    return Promise.reject(error);\n  }\n);\n\nconst apiService = {\n  // Analysis endpoints\n  getAnalysisOverview: () => getDataWithFallback('/api/analysis/overview', 'overview'),\n  \n  getEventPerformance: () => getDataWithFallback('/api/analysis/event-performance', 'event_performance'),\n  \n  getStandPerformance: () => getDataWithFallback('/api/analysis/stand-performance', 'stand_performance'),\n  \n  // Predictions\n  getMarch5Predictions: () => getDataWithFallback('/api/predictions/march5', 'march5_predictions'),\n  \n  // Staffing\n  getStaffingRecommendations: () => getDataWithFallback('/api/staffing/recommendations', 'staffing_recommendations'),\n  \n  // Risk assessment\n  getRiskAssessment: () => getDataWithFallback('/api/risk-assessment', 'risk_assessment'),\n  \n  // Historical data\n  getHistoricalData: () => getDataWithFallback('/api/historical-data', 'historical_data'),\n  \n  // Health check\n  healthCheck: async () => {\n    if (useStaticData) {\n      return { data: { status: 'ok', message: 'Using static data', mode: 'static' } };\n    }\n    try {\n      return await api.get('/');\n    } catch (error) {\n      useStaticData = true;\n      return { data: { status: 'ok', message: 'Using static data', mode: 'static' } };\n    }\n  }\n};\n\nexport default apiService; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}