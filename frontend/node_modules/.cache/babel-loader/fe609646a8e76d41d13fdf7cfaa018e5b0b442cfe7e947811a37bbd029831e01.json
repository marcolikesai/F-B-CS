{"ast":null,"code":"var _jsxFileName = \"/Users/marcomontenegro/dataanalysis/frontend/src/pages/Methods.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport Card from '../components/shared/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PageContainer = styled.div`\n  max-width: 1000px;\n  margin: 0 auto;\n`;\n_c = PageContainer;\nconst PageHeader = styled.div`\n  margin-bottom: 32px;\n`;\n_c2 = PageHeader;\nconst PageTitle = styled.h1`\n  font-size: 2rem;\n  font-weight: 700;\n  color: #1e293b;\n  margin: 0 0 8px 0;\n`;\n_c3 = PageTitle;\nconst PageSubtitle = styled.p`\n  font-size: 1rem;\n  color: #64748b;\n  margin: 0;\n`;\n_c4 = PageSubtitle;\nconst Section = styled.div`\n  margin-bottom: 24px;\n`;\n_c5 = Section;\nconst SectionTitle = styled.h2`\n  font-size: 1.25rem;\n  font-weight: 700;\n  color: #111827;\n  margin: 0 0 8px 0;\n`;\nconst Paragraph = styled.p`\n  color: #374151;\n  line-height: 1.6;\n`;\n_c6 = Paragraph;\nconst List = styled.ul`\n  margin: 0 0 0 18px;\n  color: #374151;\n`;\n_c7 = List;\nconst CodeBlock = styled.pre`\n  background: #0b1020;\n  color: #e5e7eb;\n  border-radius: 8px;\n  padding: 14px;\n  overflow-x: auto;\n  font-size: 0.9rem;\n`;\n_c8 = CodeBlock;\nconst Methods = () => {\n  return /*#__PURE__*/_jsxDEV(PageContainer, {\n    children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n      children: [/*#__PURE__*/_jsxDEV(PageTitle, {\n        children: \"Methods and Technical Approach\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PageSubtitle, {\n        children: \"End-to-end methodology for demand forecasting, staffing optimization, and operational insights\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Section, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        title: \"Data Sources and Preparation\",\n        subtitle: \"Excel ingestion, cleansing, and feature engineering\",\n        children: [/*#__PURE__*/_jsxDEV(Paragraph, {\n          children: \"We ingest three worksheets from the provided Excel file and normalize temporal fields. The unified dataset is created by joining event characteristics to event-level POS metrics. Key derived fields include day-of-week, month, local hour, weekend indicator, and per-capita metrics.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Sheets: Event Characteristics, Event POS, Stand POS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Temporal normalization: ISO date parsing, hour extraction from event time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Joins: inner join on venue and event date (event granularity)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Per-capita metrics: transactions per attendee, sales per attendee, sales per transaction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CodeBlock, {\n          children: `# Core transforms (Python/pandas)\nevents['DayOfWeek'] = events['Calendar Date'].dt.day_name()\nevents['Month'] = events['Calendar Date'].dt.month\nevents['Hour'] = pd.to_datetime(events['Event Time'], format='%H:%M:%S').dt.hour\nevents['IsWeekend'] = events['DayOfWeek'].isin(['Saturday', 'Sunday'])\ncombined = events.merge(event_pos, on=['Venue Name','Calendar Date'], how='inner')\ncombined['Trans_Per_Attendee'] = combined['Transactions'] / combined['Total Attendance']\ncombined['Sales_Per_Attendee'] = combined['Net Sales'] / combined['Total Attendance']\ncombined['Sales_Per_Transaction'] = combined['Net Sales'] / combined['Transactions']`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Section, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        title: \"Modeling Strategy\",\n        subtitle: \"Targets, features, and model selection\",\n        children: [/*#__PURE__*/_jsxDEV(Paragraph, {\n          children: \"We frame prediction as supervised regression with multiple targets at the event level. Categorical drivers are label-encoded and combined with temporal and attendance features. We benchmark three estimators and pick the best per-target based on hold-out R\\xB2.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Targets: Transactions, Net Sales, Units, Total POS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Features: Total Attendance, Event Type (encoded), Opponent (encoded), Day of Week (encoded), Month, Hour, IsWeekend\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Estimators: Linear Regression, Random Forest, Gradient Boosting\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Validation: 80/20 train/test split; R\\xB2 and qualitative residual review\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CodeBlock, {\n          children: `# Feature matrix\nevent_type = LabelEncoder().fit_transform(combined['EventTypeName'])\nopponent = LabelEncoder().fit_transform(combined['Opponent'])\ndow = LabelEncoder().fit_transform(combined['DayOfWeek'])\nX = pd.DataFrame({\n  'Total Attendance': combined['Total Attendance'],\n  'EventType_Encoded': event_type,\n  'Opponent_Encoded': opponent,\n  'DayOfWeek_Encoded': dow,\n  'Month': combined['Month'],\n  'Hour': combined['Hour'],\n  'IsWeekend': combined['IsWeekend'].astype(int)\n})`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Section, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        title: \"March 5 Forecasting\",\n        subtitle: \"Constructing the feature vector and predictions\",\n        children: [/*#__PURE__*/_jsxDEV(Paragraph, {\n          children: \"For March 5, 2023 (Sunday 2 PM ET, expected attendance 10,000), we construct a single event feature vector using encoded means and temporal context. Model outputs include predicted transactions, sales, units, and POS terminals, plus derived per-capita KPIs.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CodeBlock, {\n          children: `# March 5 feature vector\nx = {\n  'Total Attendance': 10000,\n  'EventType_Encoded': average_NBA_code,\n  'Opponent_Encoded': average_opponent_code,\n  'DayOfWeek_Encoded': code_for_sunday,\n  'Month': 3,\n  'Hour': 14,\n  'IsWeekend': 1\n}\n# y_pred = model.predict([x[col] for col in feature_order])`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Section, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        title: \"Stand-Level Staffing\",\n        subtitle: \"Allocation using historical share and service rates\",\n        children: [/*#__PURE__*/_jsxDEV(Paragraph, {\n          children: \"We allocate predicted transactions across stand groups in proportion to their historical share, then size POS terminals using empirically observed transactions-per-POS efficiency by stand type. This yields both per-stand POS counts and total cashier counts.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Share model: stand_share = stand_transactions / total_transactions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Capacity: POS_needed = ceil(predicted_transactions_for_stand / avg_trans_per_pos)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Outputs: per-stand POS, total POS, qualitative priority guidance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Section, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        title: \"Risk, Assumptions, and Limitations\",\n        subtitle: \"What to watch and how to mitigate\",\n        children: /*#__PURE__*/_jsxDEV(List, {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Data drift between seasons and roster changes can shift per-capita behavior.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Static opponent encoding approximates opponent effect; richer context could improve this.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Weather and promotions are not modeled explicitly; consider adding exogenous regressors.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Mitigation: dynamic POS activation plan and real-time queue monitoring.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Section, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        title: \"Performance and Deployment\",\n        subtitle: \"Caching, fast API, and local dev\",\n        children: [/*#__PURE__*/_jsxDEV(Paragraph, {\n          children: \"To ensure a responsive UI, we pre-compute analysis into a compact JSON cache and serve it via a lightweight Flask app. This avoids training or heavy aggregation at request time and makes local operation stable and fast.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CodeBlock, {\n          children: `# Generate cache once\npython backend/cache_results.py\n\n# Serve cached API\nython backend/app_fast.py  # bound to http://localhost:5001\n\n# Frontend dev server\ncd frontend && npm start  # proxy configured for port 5001`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_c9 = Methods;\nexport default Methods;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"PageContainer\");\n$RefreshReg$(_c2, \"PageHeader\");\n$RefreshReg$(_c3, \"PageTitle\");\n$RefreshReg$(_c4, \"PageSubtitle\");\n$RefreshReg$(_c5, \"Section\");\n$RefreshReg$(_c6, \"Paragraph\");\n$RefreshReg$(_c7, \"List\");\n$RefreshReg$(_c8, \"CodeBlock\");\n$RefreshReg$(_c9, \"Methods\");","map":{"version":3,"names":["React","styled","Card","jsxDEV","_jsxDEV","PageContainer","div","_c","PageHeader","_c2","PageTitle","h1","_c3","PageSubtitle","p","_c4","Section","_c5","SectionTitle","h2","Paragraph","_c6","List","ul","_c7","CodeBlock","pre","_c8","Methods","children","fileName","_jsxFileName","lineNumber","columnNumber","title","subtitle","_c9","$RefreshReg$"],"sources":["/Users/marcomontenegro/dataanalysis/frontend/src/pages/Methods.js"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport Card from '../components/shared/Card';\n\nconst PageContainer = styled.div`\n  max-width: 1000px;\n  margin: 0 auto;\n`;\n\nconst PageHeader = styled.div`\n  margin-bottom: 32px;\n`;\n\nconst PageTitle = styled.h1`\n  font-size: 2rem;\n  font-weight: 700;\n  color: #1e293b;\n  margin: 0 0 8px 0;\n`;\n\nconst PageSubtitle = styled.p`\n  font-size: 1rem;\n  color: #64748b;\n  margin: 0;\n`;\n\nconst Section = styled.div`\n  margin-bottom: 24px;\n`;\n\nconst SectionTitle = styled.h2`\n  font-size: 1.25rem;\n  font-weight: 700;\n  color: #111827;\n  margin: 0 0 8px 0;\n`;\n\nconst Paragraph = styled.p`\n  color: #374151;\n  line-height: 1.6;\n`;\n\nconst List = styled.ul`\n  margin: 0 0 0 18px;\n  color: #374151;\n`;\n\nconst CodeBlock = styled.pre`\n  background: #0b1020;\n  color: #e5e7eb;\n  border-radius: 8px;\n  padding: 14px;\n  overflow-x: auto;\n  font-size: 0.9rem;\n`;\n\nconst Methods = () => {\n  return (\n    <PageContainer>\n      <PageHeader>\n        <PageTitle>Methods and Technical Approach</PageTitle>\n        <PageSubtitle>\n          End-to-end methodology for demand forecasting, staffing optimization, and operational insights\n        </PageSubtitle>\n      </PageHeader>\n\n      <Section>\n        <Card title=\"Data Sources and Preparation\" subtitle=\"Excel ingestion, cleansing, and feature engineering\">\n          <Paragraph>\n            We ingest three worksheets from the provided Excel file and normalize temporal fields. The\n            unified dataset is created by joining event characteristics to event-level POS metrics. Key\n            derived fields include day-of-week, month, local hour, weekend indicator, and per-capita metrics.\n          </Paragraph>\n          <List>\n            <li>Sheets: Event Characteristics, Event POS, Stand POS</li>\n            <li>Temporal normalization: ISO date parsing, hour extraction from event time</li>\n            <li>Joins: inner join on venue and event date (event granularity)</li>\n            <li>Per-capita metrics: transactions per attendee, sales per attendee, sales per transaction</li>\n          </List>\n          <CodeBlock>{`# Core transforms (Python/pandas)\nevents['DayOfWeek'] = events['Calendar Date'].dt.day_name()\nevents['Month'] = events['Calendar Date'].dt.month\nevents['Hour'] = pd.to_datetime(events['Event Time'], format='%H:%M:%S').dt.hour\nevents['IsWeekend'] = events['DayOfWeek'].isin(['Saturday', 'Sunday'])\ncombined = events.merge(event_pos, on=['Venue Name','Calendar Date'], how='inner')\ncombined['Trans_Per_Attendee'] = combined['Transactions'] / combined['Total Attendance']\ncombined['Sales_Per_Attendee'] = combined['Net Sales'] / combined['Total Attendance']\ncombined['Sales_Per_Transaction'] = combined['Net Sales'] / combined['Transactions']`}</CodeBlock>\n        </Card>\n      </Section>\n\n      <Section>\n        <Card title=\"Modeling Strategy\" subtitle=\"Targets, features, and model selection\">\n          <Paragraph>\n            We frame prediction as supervised regression with multiple targets at the event level. Categorical\n            drivers are label-encoded and combined with temporal and attendance features. We benchmark three\n            estimators and pick the best per-target based on hold-out R².\n          </Paragraph>\n          <List>\n            <li>Targets: Transactions, Net Sales, Units, Total POS</li>\n            <li>Features: Total Attendance, Event Type (encoded), Opponent (encoded), Day of Week (encoded), Month, Hour, IsWeekend</li>\n            <li>Estimators: Linear Regression, Random Forest, Gradient Boosting</li>\n            <li>Validation: 80/20 train/test split; R² and qualitative residual review</li>\n          </List>\n          <CodeBlock>{`# Feature matrix\nevent_type = LabelEncoder().fit_transform(combined['EventTypeName'])\nopponent = LabelEncoder().fit_transform(combined['Opponent'])\ndow = LabelEncoder().fit_transform(combined['DayOfWeek'])\nX = pd.DataFrame({\n  'Total Attendance': combined['Total Attendance'],\n  'EventType_Encoded': event_type,\n  'Opponent_Encoded': opponent,\n  'DayOfWeek_Encoded': dow,\n  'Month': combined['Month'],\n  'Hour': combined['Hour'],\n  'IsWeekend': combined['IsWeekend'].astype(int)\n})`}</CodeBlock>\n        </Card>\n      </Section>\n\n      <Section>\n        <Card title=\"March 5 Forecasting\" subtitle=\"Constructing the feature vector and predictions\">\n          <Paragraph>\n            For March 5, 2023 (Sunday 2 PM ET, expected attendance 10,000), we construct a single event\n            feature vector using encoded means and temporal context. Model outputs include predicted\n            transactions, sales, units, and POS terminals, plus derived per-capita KPIs.\n          </Paragraph>\n          <CodeBlock>{`# March 5 feature vector\nx = {\n  'Total Attendance': 10000,\n  'EventType_Encoded': average_NBA_code,\n  'Opponent_Encoded': average_opponent_code,\n  'DayOfWeek_Encoded': code_for_sunday,\n  'Month': 3,\n  'Hour': 14,\n  'IsWeekend': 1\n}\n# y_pred = model.predict([x[col] for col in feature_order])`}</CodeBlock>\n        </Card>\n      </Section>\n\n      <Section>\n        <Card title=\"Stand-Level Staffing\" subtitle=\"Allocation using historical share and service rates\">\n          <Paragraph>\n            We allocate predicted transactions across stand groups in proportion to their historical share,\n            then size POS terminals using empirically observed transactions-per-POS efficiency by stand type.\n            This yields both per-stand POS counts and total cashier counts.\n          </Paragraph>\n          <List>\n            <li>Share model: stand_share = stand_transactions / total_transactions</li>\n            <li>Capacity: POS_needed = ceil(predicted_transactions_for_stand / avg_trans_per_pos)</li>\n            <li>Outputs: per-stand POS, total POS, qualitative priority guidance</li>\n          </List>\n        </Card>\n      </Section>\n\n      <Section>\n        <Card title=\"Risk, Assumptions, and Limitations\" subtitle=\"What to watch and how to mitigate\">\n          <List>\n            <li>Data drift between seasons and roster changes can shift per-capita behavior.</li>\n            <li>Static opponent encoding approximates opponent effect; richer context could improve this.</li>\n            <li>Weather and promotions are not modeled explicitly; consider adding exogenous regressors.</li>\n            <li>Mitigation: dynamic POS activation plan and real-time queue monitoring.</li>\n          </List>\n        </Card>\n      </Section>\n\n      <Section>\n        <Card title=\"Performance and Deployment\" subtitle=\"Caching, fast API, and local dev\">\n          <Paragraph>\n            To ensure a responsive UI, we pre-compute analysis into a compact JSON cache and serve it via a\n            lightweight Flask app. This avoids training or heavy aggregation at request time and makes local\n            operation stable and fast.\n          </Paragraph>\n          <CodeBlock>{`# Generate cache once\npython backend/cache_results.py\n\n# Serve cached API\nython backend/app_fast.py  # bound to http://localhost:5001\n\n# Frontend dev server\ncd frontend && npm start  # proxy configured for port 5001`}</CodeBlock>\n        </Card>\n      </Section>\n    </PageContainer>\n  );\n};\n\nexport default Methods; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}