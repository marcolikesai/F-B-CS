{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/marcomontenegro/dataanalysis/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7;import React from'react';import styled from'styled-components';import Card from'../components/shared/Card';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PageContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  max-width: 1000px;\\n  margin: 0 auto;\\n\"])));const PageHeader=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  margin-bottom: 32px;\\n\"])));const PageTitle=styled.h1(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  font-size: 2rem;\\n  font-weight: 700;\\n  color: #1e293b;\\n  margin: 0 0 8px 0;\\n\"])));const Section=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  margin-bottom: 24px;\\n\"])));const Paragraph=styled.p(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  color: #374151;\\n  line-height: 1.6;\\n\"])));const List=styled.ul(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  margin: 0 0 0 18px;\\n  color: #374151;\\n\"])));const CodeBlock=styled.pre(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  background: #0b1020;\\n  color: #e5e7eb;\\n  border-radius: 8px;\\n  padding: 14px;\\n  overflow-x: auto;\\n  font-size: 0.9rem;\\n\"])));const Methods=()=>{return/*#__PURE__*/_jsxs(PageContainer,{children:[/*#__PURE__*/_jsx(PageHeader,{children:/*#__PURE__*/_jsx(PageTitle,{children:\"Methods\"})}),/*#__PURE__*/_jsx(Section,{children:/*#__PURE__*/_jsxs(Card,{title:\"Data Sources and Preparation\",subtitle:\"Simple steps\",children:[/*#__PURE__*/_jsx(Paragraph,{children:\"We combine three worksheets (Event Characteristics, Event POS, Stand POS), standardize dates/times, and create per-capita KPIs. Event Characteristics joins with Event POS at the date-venue grain to form the modeling table.\"}),/*#__PURE__*/_jsxs(List,{children:[/*#__PURE__*/_jsx(\"li\",{children:\"Collect: import three tabs and validate columns\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Clean: parse dates/times, fix types, remove obvious anomalies\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Join: link Event Characteristics to Event POS by venue and date\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Engineer: day-of-week, month, hour, weekend, and per-capita KPIs\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Check: spot-check ranges and missing values\"})]})]})}),/*#__PURE__*/_jsx(Section,{children:/*#__PURE__*/_jsx(Card,{title:\"Modeling Strategy\",subtitle:\"Step-by-step, per model\",children:/*#__PURE__*/_jsxs(List,{children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Linear Regression\"}),\": establishes a simple baseline; fast and interpretable. We used it to sanity-check directionality and effect sizes.\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Random Forest\"}),\": captures non-linearities and interactions without heavy tuning. We used feature importance to verify attendance and calendar fields dominate.\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Gradient Boosting\"}),\": strongest event-level accuracy in our tests; selected when it achieved the highest held-out R\\xB2.\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Selection rule\"}),\": for each target (transactions, sales, units, POS), we pick the model with the best held-out R\\xB2, then compute per-attendee KPIs from the predictions.\"]})]})})}),/*#__PURE__*/_jsx(Section,{children:/*#__PURE__*/_jsx(Card,{title:\"March 5 Forecasting\",subtitle:\"Step by step\",children:/*#__PURE__*/_jsxs(List,{children:[/*#__PURE__*/_jsx(\"li\",{children:\"Set assumptions: attendance 10,000; Sunday; 2 PM; opponent average\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Assemble inputs: attendance + encoded calendar/opponent fields\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Score models: get predictions for transactions, sales, units, POS\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Derive KPIs: transactions/attendee, sales/attendee, sales/transaction\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Cross-check: compare to historical NBA averages and weekend/daytime patterns\"})]})})}),/*#__PURE__*/_jsx(Section,{children:/*#__PURE__*/_jsxs(Card,{title:\"Stand-Level Staffing\",subtitle:\"Allocation using historical share and service rates\",children:[/*#__PURE__*/_jsx(Paragraph,{children:\"We allocate predicted transactions across stand groups in proportion to their historical share, then size POS terminals using empirically observed transactions-per-POS efficiency by stand type. This yields both per-stand POS counts and total cashier counts.\"}),/*#__PURE__*/_jsxs(List,{children:[/*#__PURE__*/_jsx(\"li\",{children:\"Share model: stand_share = stand_transactions / total_transactions\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Capacity: POS_needed = ceil(predicted_transactions_for_stand / avg_trans_per_pos)\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Outputs: per-stand POS, total POS, qualitative priority guidance\"})]})]})}),/*#__PURE__*/_jsx(Section,{children:/*#__PURE__*/_jsx(Card,{title:\"Risk, Assumptions, and Limitations\",subtitle:\"What to watch and how to mitigate\",children:/*#__PURE__*/_jsxs(List,{children:[/*#__PURE__*/_jsx(\"li\",{children:\"Data drift between seasons and roster changes can shift per-capita behavior.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Static opponent encoding approximates opponent effect; richer context could improve this.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Weather and promotions are not modeled explicitly; consider adding exogenous regressors.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Mitigation: dynamic POS activation plan and real-time queue monitoring.\"})]})})}),/*#__PURE__*/_jsx(Section,{children:/*#__PURE__*/_jsxs(Card,{title:\"Performance and Deployment\",subtitle:\"Caching, fast API, and local dev\",children:[/*#__PURE__*/_jsx(Paragraph,{children:\"To ensure a responsive UI, we pre-compute analysis into a compact JSON cache and serve it via a lightweight Flask app. This avoids training or heavy aggregation at request time and makes local operation stable and fast.\"}),/*#__PURE__*/_jsx(CodeBlock,{children:\"# Generate cache once\\npython backend/cache_results.py\\n\\n# Serve cached API\\npython backend/app_fast.py  # bound to http://localhost:5001\\n\\n# Frontend dev server\\ncd frontend && npm start  # proxy configured for port 5001\"})]})})]});};export default Methods;","map":{"version":3,"names":["React","styled","Card","jsx","_jsx","jsxs","_jsxs","PageContainer","div","_templateObject","_taggedTemplateLiteral","PageHeader","_templateObject2","PageTitle","h1","_templateObject3","Section","_templateObject4","Paragraph","p","_templateObject5","List","ul","_templateObject6","CodeBlock","pre","_templateObject7","Methods","children","title","subtitle"],"sources":["/Users/marcomontenegro/dataanalysis/frontend/src/pages/Methods.js"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport Card from '../components/shared/Card';\n\nconst PageContainer = styled.div`\n  max-width: 1000px;\n  margin: 0 auto;\n`;\n\nconst PageHeader = styled.div`\n  margin-bottom: 32px;\n`;\n\nconst PageTitle = styled.h1`\n  font-size: 2rem;\n  font-weight: 700;\n  color: #1e293b;\n  margin: 0 0 8px 0;\n`;\n\nconst Section = styled.div`\n  margin-bottom: 24px;\n`;\n\nconst Paragraph = styled.p`\n  color: #374151;\n  line-height: 1.6;\n`;\n\nconst List = styled.ul`\n  margin: 0 0 0 18px;\n  color: #374151;\n`;\n\nconst CodeBlock = styled.pre`\n  background: #0b1020;\n  color: #e5e7eb;\n  border-radius: 8px;\n  padding: 14px;\n  overflow-x: auto;\n  font-size: 0.9rem;\n`;\n\nconst Methods = () => {\n  return (\n    <PageContainer>\n      <PageHeader>\n        <PageTitle>Methods</PageTitle>\n      </PageHeader>\n\n      <Section>\n                  <Card title=\"Data Sources and Preparation\" subtitle=\"Simple steps\">\n          <Paragraph>\n            We combine three worksheets (Event Characteristics, Event POS, Stand POS), standardize dates/times,\n            and create per-capita KPIs. Event Characteristics joins with Event POS at the date-venue grain to form\n            the modeling table.\n          </Paragraph>\n          <List>\n            <li>Collect: import three tabs and validate columns</li>\n            <li>Clean: parse dates/times, fix types, remove obvious anomalies</li>\n            <li>Join: link Event Characteristics to Event POS by venue and date</li>\n            <li>Engineer: day-of-week, month, hour, weekend, and per-capita KPIs</li>\n            <li>Check: spot-check ranges and missing values</li>\n          </List>\n        </Card>\n      </Section>\n\n      <Section>\n                  <Card title=\"Modeling Strategy\" subtitle=\"Step-by-step, per model\">\n          <List>\n            <li><strong>Linear Regression</strong>: establishes a simple baseline; fast and interpretable. We used it to sanity-check directionality and effect sizes.</li>\n            <li><strong>Random Forest</strong>: captures non-linearities and interactions without heavy tuning. We used feature importance to verify attendance and calendar fields dominate.</li>\n            <li><strong>Gradient Boosting</strong>: strongest event-level accuracy in our tests; selected when it achieved the highest held-out R².</li>\n            <li><strong>Selection rule</strong>: for each target (transactions, sales, units, POS), we pick the model with the best held-out R², then compute per-attendee KPIs from the predictions.</li>\n          </List>\n        </Card>\n      </Section>\n\n      <Section>\n                  <Card title=\"March 5 Forecasting\" subtitle=\"Step by step\">\n          <List>\n            <li>Set assumptions: attendance 10,000; Sunday; 2 PM; opponent average</li>\n            <li>Assemble inputs: attendance + encoded calendar/opponent fields</li>\n            <li>Score models: get predictions for transactions, sales, units, POS</li>\n            <li>Derive KPIs: transactions/attendee, sales/attendee, sales/transaction</li>\n            <li>Cross-check: compare to historical NBA averages and weekend/daytime patterns</li>\n          </List>\n        </Card>\n      </Section>\n\n      <Section>\n        <Card title=\"Stand-Level Staffing\" subtitle=\"Allocation using historical share and service rates\">\n          <Paragraph>\n            We allocate predicted transactions across stand groups in proportion to their historical share,\n            then size POS terminals using empirically observed transactions-per-POS efficiency by stand type.\n            This yields both per-stand POS counts and total cashier counts.\n          </Paragraph>\n          <List>\n            <li>Share model: stand_share = stand_transactions / total_transactions</li>\n            <li>Capacity: POS_needed = ceil(predicted_transactions_for_stand / avg_trans_per_pos)</li>\n            <li>Outputs: per-stand POS, total POS, qualitative priority guidance</li>\n          </List>\n        </Card>\n      </Section>\n\n      <Section>\n        <Card title=\"Risk, Assumptions, and Limitations\" subtitle=\"What to watch and how to mitigate\">\n          <List>\n            <li>Data drift between seasons and roster changes can shift per-capita behavior.</li>\n            <li>Static opponent encoding approximates opponent effect; richer context could improve this.</li>\n            <li>Weather and promotions are not modeled explicitly; consider adding exogenous regressors.</li>\n            <li>Mitigation: dynamic POS activation plan and real-time queue monitoring.</li>\n          </List>\n        </Card>\n      </Section>\n\n      <Section>\n        <Card title=\"Performance and Deployment\" subtitle=\"Caching, fast API, and local dev\">\n          <Paragraph>\n            To ensure a responsive UI, we pre-compute analysis into a compact JSON cache and serve it via a\n            lightweight Flask app. This avoids training or heavy aggregation at request time and makes local\n            operation stable and fast.\n          </Paragraph>\n          <CodeBlock>{`# Generate cache once\npython backend/cache_results.py\n\n# Serve cached API\npython backend/app_fast.py  # bound to http://localhost:5001\n\n# Frontend dev server\ncd frontend && npm start  # proxy configured for port 5001`}</CodeBlock>\n        </Card>\n      </Section>\n    </PageContainer>\n  );\n};\n\nexport default Methods; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}