{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || (process.env.NODE_ENV === 'production' ? '/api' : 'http://localhost:5001');\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor for logging\napi.interceptors.request.use(config => {\n  var _config$method;\n  console.log(`Making ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} request to ${config.url}`);\n  return config;\n}, error => {\n  console.error('Request error:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor for error handling\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  var _error$response;\n  console.error('API Error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  return Promise.reject(error);\n});\nexport const apiService = {\n  // Health check\n  healthCheck: () => api.get('/'),\n  // Analysis endpoints\n  getAnalysisOverview: () => api.get('/api/analysis/overview'),\n  getEventPerformance: () => api.get('/api/analysis/event-performance'),\n  getStandPerformance: () => api.get('/api/analysis/stand-performance'),\n  getHistoricalData: () => api.get('/api/historical-data'),\n  // Predictions\n  getMarch5Predictions: () => api.get('/api/predictions/march5'),\n  // Staffing\n  getStaffingRecommendations: () => api.get('/api/staffing/recommendations'),\n  // Risk Assessment\n  getRiskAssessment: () => api.get('/api/risk-assessment')\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","NODE_ENV","api","create","baseURL","timeout","headers","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","error","Promise","reject","response","_error$response","data","message","apiService","healthCheck","get","getAnalysisOverview","getEventPerformance","getStandPerformance","getHistoricalData","getMarch5Predictions","getStaffingRecommendations","getRiskAssessment"],"sources":["/Users/marcomontenegro/dataanalysis/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL \n  || (process.env.NODE_ENV === 'production' \n    ? '/api'\n    : 'http://localhost:5001');\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor for logging\napi.interceptors.request.use(\n  (config) => {\n    console.log(`Making ${config.method?.toUpperCase()} request to ${config.url}`);\n    return config;\n  },\n  (error) => {\n    console.error('Request error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor for error handling\napi.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    console.error('API Error:', error.response?.data || error.message);\n    return Promise.reject(error);\n  }\n);\n\nexport const apiService = {\n  // Health check\n  healthCheck: () => api.get('/'),\n\n  // Analysis endpoints\n  getAnalysisOverview: () => api.get('/api/analysis/overview'),\n  getEventPerformance: () => api.get('/api/analysis/event-performance'),\n  getStandPerformance: () => api.get('/api/analysis/stand-performance'),\n  getHistoricalData: () => api.get('/api/historical-data'),\n\n  // Predictions\n  getMarch5Predictions: () => api.get('/api/predictions/march5'),\n  \n  // Staffing\n  getStaffingRecommendations: () => api.get('/api/staffing/recommendations'),\n  \n  // Risk Assessment\n  getRiskAssessment: () => api.get('/api/risk-assessment'),\n};\n\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,KACjDF,OAAO,CAACC,GAAG,CAACE,QAAQ,KAAK,YAAY,GACrC,MAAM,GACN,uBAAuB,CAAC;AAE9B,MAAMC,GAAG,GAAGN,KAAK,CAACO,MAAM,CAAC;EACvBC,OAAO,EAAEP,YAAY;EACrBQ,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EAAA,IAAAC,cAAA;EACVC,OAAO,CAACC,GAAG,CAAC,WAAAF,cAAA,GAAUD,MAAM,CAACI,MAAM,cAAAH,cAAA,uBAAbA,cAAA,CAAeI,WAAW,CAAC,CAAC,eAAeL,MAAM,CAACM,GAAG,EAAE,CAAC;EAC9E,OAAON,MAAM;AACf,CAAC,EACAO,KAAK,IAAK;EACTL,OAAO,CAACK,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;EACtC,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAf,GAAG,CAACK,YAAY,CAACa,QAAQ,CAACX,GAAG,CAC1BW,QAAQ,IAAK;EACZ,OAAOA,QAAQ;AACjB,CAAC,EACAH,KAAK,IAAK;EAAA,IAAAI,eAAA;EACTT,OAAO,CAACK,KAAK,CAAC,YAAY,EAAE,EAAAI,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBC,IAAI,KAAIL,KAAK,CAACM,OAAO,CAAC;EAClE,OAAOL,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,OAAO,MAAMO,UAAU,GAAG;EACxB;EACAC,WAAW,EAAEA,CAAA,KAAMvB,GAAG,CAACwB,GAAG,CAAC,GAAG,CAAC;EAE/B;EACAC,mBAAmB,EAAEA,CAAA,KAAMzB,GAAG,CAACwB,GAAG,CAAC,wBAAwB,CAAC;EAC5DE,mBAAmB,EAAEA,CAAA,KAAM1B,GAAG,CAACwB,GAAG,CAAC,iCAAiC,CAAC;EACrEG,mBAAmB,EAAEA,CAAA,KAAM3B,GAAG,CAACwB,GAAG,CAAC,iCAAiC,CAAC;EACrEI,iBAAiB,EAAEA,CAAA,KAAM5B,GAAG,CAACwB,GAAG,CAAC,sBAAsB,CAAC;EAExD;EACAK,oBAAoB,EAAEA,CAAA,KAAM7B,GAAG,CAACwB,GAAG,CAAC,yBAAyB,CAAC;EAE9D;EACAM,0BAA0B,EAAEA,CAAA,KAAM9B,GAAG,CAACwB,GAAG,CAAC,+BAA+B,CAAC;EAE1E;EACAO,iBAAiB,EAAEA,CAAA,KAAM/B,GAAG,CAACwB,GAAG,CAAC,sBAAsB;AACzD,CAAC;AAED,eAAexB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}