{"ast":null,"code":"import axios from 'axios';\nimport mockData from '../data/mockData.json';\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || (process.env.NODE_ENV === 'production' ? '/api' : 'http://localhost:5001');\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Fallback to static data if backend is not available\nlet useStaticData = false;\nconst checkBackendAvailable = async () => {\n  try {\n    await api.get('/', {\n      timeout: 2000\n    });\n    return true;\n  } catch (error) {\n    console.log('Backend not available, using static data');\n    useStaticData = true;\n    return false;\n  }\n};\n\n// Initialize backend check\ncheckBackendAvailable();\n\n// Helper to get data with fallback\nconst getDataWithFallback = async (endpoint, staticDataPath) => {\n  if (useStaticData) {\n    const data = staticDataPath.split('.').reduce((obj, key) => obj === null || obj === void 0 ? void 0 : obj[key], mockData);\n    return {\n      data\n    };\n  }\n  try {\n    return await api.get(endpoint);\n  } catch (error) {\n    console.log(`API error for ${endpoint}, falling back to static data`);\n    useStaticData = true;\n    const data = staticDataPath.split('.').reduce((obj, key) => obj === null || obj === void 0 ? void 0 : obj[key], mockData);\n    return {\n      data\n    };\n  }\n};\n\n// Request interceptor for logging\napi.interceptors.request.use(config => {\n  if (!useStaticData) {\n    var _config$method;\n    console.log(`Making ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} request to ${config.url}`);\n  }\n  return config;\n}, error => {\n  console.error('Request error:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor for error handling\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  console.error('API Error:', error.message);\n  if (error.code === 'ECONNREFUSED' || error.code === 'NETWORK_ERROR') {\n    useStaticData = true;\n  }\n  return Promise.reject(error);\n});\nconst apiService = {\n  // Analysis endpoints\n  getAnalysisOverview: () => getDataWithFallback('/api/analysis/overview', 'overview'),\n  getEventPerformance: () => getDataWithFallback('/api/analysis/event-performance', 'event_performance'),\n  getStandPerformance: () => getDataWithFallback('/api/analysis/stand-performance', 'stand_performance'),\n  // Predictions\n  getMarch5Predictions: () => getDataWithFallback('/api/predictions/march5', 'march5_predictions'),\n  // Staffing\n  getStaffingRecommendations: () => getDataWithFallback('/api/staffing/recommendations', 'staffing_recommendations'),\n  // Risk assessment\n  getRiskAssessment: () => getDataWithFallback('/api/risk-assessment', 'risk_assessment'),\n  // Historical data\n  getHistoricalData: () => getDataWithFallback('/api/historical-data', 'historical_data'),\n  // Health check\n  healthCheck: async () => {\n    if (useStaticData) {\n      return {\n        data: {\n          status: 'ok',\n          message: 'Using static data',\n          mode: 'static'\n        }\n      };\n    }\n    try {\n      return await api.get('/');\n    } catch (error) {\n      useStaticData = true;\n      return {\n        data: {\n          status: 'ok',\n          message: 'Using static data',\n          mode: 'static'\n        }\n      };\n    }\n  }\n};\nexport default apiService;","map":{"version":3,"names":["axios","mockData","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","NODE_ENV","api","create","baseURL","timeout","headers","useStaticData","checkBackendAvailable","get","error","console","log","getDataWithFallback","endpoint","staticDataPath","data","split","reduce","obj","key","interceptors","request","use","config","_config$method","method","toUpperCase","url","Promise","reject","response","message","code","apiService","getAnalysisOverview","getEventPerformance","getStandPerformance","getMarch5Predictions","getStaffingRecommendations","getRiskAssessment","getHistoricalData","healthCheck","status","mode"],"sources":["/Users/marcomontenegro/dataanalysis/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\nimport mockData from '../data/mockData.json';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL \n  || (process.env.NODE_ENV === 'production' \n    ? '/api'\n    : 'http://localhost:5001');\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Fallback to static data if backend is not available\nlet useStaticData = false;\n\nconst checkBackendAvailable = async () => {\n  try {\n    await api.get('/', { timeout: 2000 });\n    return true;\n  } catch (error) {\n    console.log('Backend not available, using static data');\n    useStaticData = true;\n    return false;\n  }\n};\n\n// Initialize backend check\ncheckBackendAvailable();\n\n// Helper to get data with fallback\nconst getDataWithFallback = async (endpoint, staticDataPath) => {\n  if (useStaticData) {\n    const data = staticDataPath.split('.').reduce((obj, key) => obj?.[key], mockData);\n    return { data };\n  }\n  \n  try {\n    return await api.get(endpoint);\n  } catch (error) {\n    console.log(`API error for ${endpoint}, falling back to static data`);\n    useStaticData = true;\n    const data = staticDataPath.split('.').reduce((obj, key) => obj?.[key], mockData);\n    return { data };\n  }\n};\n\n// Request interceptor for logging\napi.interceptors.request.use(\n  (config) => {\n    if (!useStaticData) {\n      console.log(`Making ${config.method?.toUpperCase()} request to ${config.url}`);\n    }\n    return config;\n  },\n  (error) => {\n    console.error('Request error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor for error handling\napi.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    console.error('API Error:', error.message);\n    if (error.code === 'ECONNREFUSED' || error.code === 'NETWORK_ERROR') {\n      useStaticData = true;\n    }\n    return Promise.reject(error);\n  }\n);\n\nconst apiService = {\n  // Analysis endpoints\n  getAnalysisOverview: () => getDataWithFallback('/api/analysis/overview', 'overview'),\n  \n  getEventPerformance: () => getDataWithFallback('/api/analysis/event-performance', 'event_performance'),\n  \n  getStandPerformance: () => getDataWithFallback('/api/analysis/stand-performance', 'stand_performance'),\n  \n  // Predictions\n  getMarch5Predictions: () => getDataWithFallback('/api/predictions/march5', 'march5_predictions'),\n  \n  // Staffing\n  getStaffingRecommendations: () => getDataWithFallback('/api/staffing/recommendations', 'staffing_recommendations'),\n  \n  // Risk assessment\n  getRiskAssessment: () => getDataWithFallback('/api/risk-assessment', 'risk_assessment'),\n  \n  // Historical data\n  getHistoricalData: () => getDataWithFallback('/api/historical-data', 'historical_data'),\n  \n  // Health check\n  healthCheck: async () => {\n    if (useStaticData) {\n      return { data: { status: 'ok', message: 'Using static data', mode: 'static' } };\n    }\n    try {\n      return await api.get('/');\n    } catch (error) {\n      useStaticData = true;\n      return { data: { status: 'ok', message: 'Using static data', mode: 'static' } };\n    }\n  }\n};\n\nexport default apiService; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}