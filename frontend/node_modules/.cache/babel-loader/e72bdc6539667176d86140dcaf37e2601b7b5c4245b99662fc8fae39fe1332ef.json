{"ast":null,"code":"import axios from'axios';const API_BASE_URL=process.env.REACT_APP_API_BASE_URL||(process.env.NODE_ENV==='production'?'/api':'http://localhost:5001');const api=axios.create({baseURL:API_BASE_URL,timeout:30000,headers:{'Content-Type':'application/json'}});// Request interceptor for logging\napi.interceptors.request.use(config=>{var _config$method;console.log(\"Making \".concat((_config$method=config.method)===null||_config$method===void 0?void 0:_config$method.toUpperCase(),\" request to \").concat(config.url));return config;},error=>{console.error('Request error:',error);return Promise.reject(error);});// Response interceptor for error handling\napi.interceptors.response.use(response=>{return response;},error=>{var _error$response;console.error('API Error:',((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data)||error.message);return Promise.reject(error);});export const apiService={// Health check\nhealthCheck:()=>api.get('/'),// Analysis endpoints\ngetAnalysisOverview:()=>api.get('/api/analysis/overview'),getEventPerformance:()=>api.get('/api/analysis/event-performance'),getStandPerformance:()=>api.get('/api/analysis/stand-performance'),getHistoricalData:()=>api.get('/api/historical-data'),// Predictions\ngetMarch5Predictions:()=>api.get('/api/predictions/march5'),// Staffing\ngetStaffingRecommendations:()=>api.get('/api/staffing/recommendations'),// Risk Assessment\ngetRiskAssessment:()=>api.get('/api/risk-assessment')};export default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","NODE_ENV","api","create","baseURL","timeout","headers","interceptors","request","use","config","_config$method","console","log","concat","method","toUpperCase","url","error","Promise","reject","response","_error$response","data","message","apiService","healthCheck","get","getAnalysisOverview","getEventPerformance","getStandPerformance","getHistoricalData","getMarch5Predictions","getStaffingRecommendations","getRiskAssessment"],"sources":["/Users/marcomontenegro/dataanalysis/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL \n  || (process.env.NODE_ENV === 'production' \n    ? '/api'\n    : 'http://localhost:5001');\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor for logging\napi.interceptors.request.use(\n  (config) => {\n    console.log(`Making ${config.method?.toUpperCase()} request to ${config.url}`);\n    return config;\n  },\n  (error) => {\n    console.error('Request error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor for error handling\napi.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    console.error('API Error:', error.response?.data || error.message);\n    return Promise.reject(error);\n  }\n);\n\nexport const apiService = {\n  // Health check\n  healthCheck: () => api.get('/'),\n\n  // Analysis endpoints\n  getAnalysisOverview: () => api.get('/api/analysis/overview'),\n  getEventPerformance: () => api.get('/api/analysis/event-performance'),\n  getStandPerformance: () => api.get('/api/analysis/stand-performance'),\n  getHistoricalData: () => api.get('/api/historical-data'),\n\n  // Predictions\n  getMarch5Predictions: () => api.get('/api/predictions/march5'),\n  \n  // Staffing\n  getStaffingRecommendations: () => api.get('/api/staffing/recommendations'),\n  \n  // Risk Assessment\n  getRiskAssessment: () => api.get('/api/risk-assessment'),\n};\n\nexport default api; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,YAAY,CAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,GACjDF,OAAO,CAACC,GAAG,CAACE,QAAQ,GAAK,YAAY,CACrC,MAAM,CACN,uBAAuB,CAAC,CAE9B,KAAM,CAAAC,GAAG,CAAGN,KAAK,CAACO,MAAM,CAAC,CACvBC,OAAO,CAAEP,YAAY,CACrBQ,OAAO,CAAE,KAAK,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,EAAK,KAAAC,cAAA,CACVC,OAAO,CAACC,GAAG,WAAAC,MAAA,EAAAH,cAAA,CAAWD,MAAM,CAACK,MAAM,UAAAJ,cAAA,iBAAbA,cAAA,CAAeK,WAAW,CAAC,CAAC,iBAAAF,MAAA,CAAeJ,MAAM,CAACO,GAAG,CAAE,CAAC,CAC9E,MAAO,CAAAP,MAAM,CACf,CAAC,CACAQ,KAAK,EAAK,CACTN,OAAO,CAACM,KAAK,CAAC,gBAAgB,CAAEA,KAAK,CAAC,CACtC,MAAO,CAAAC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAC9B,CACF,CAAC,CAED;AACAhB,GAAG,CAACK,YAAY,CAACc,QAAQ,CAACZ,GAAG,CAC1BY,QAAQ,EAAK,CACZ,MAAO,CAAAA,QAAQ,CACjB,CAAC,CACAH,KAAK,EAAK,KAAAI,eAAA,CACTV,OAAO,CAACM,KAAK,CAAC,YAAY,CAAE,EAAAI,eAAA,CAAAJ,KAAK,CAACG,QAAQ,UAAAC,eAAA,iBAAdA,eAAA,CAAgBC,IAAI,GAAIL,KAAK,CAACM,OAAO,CAAC,CAClE,MAAO,CAAAL,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAC9B,CACF,CAAC,CAED,MAAO,MAAM,CAAAO,UAAU,CAAG,CACxB;AACAC,WAAW,CAAEA,CAAA,GAAMxB,GAAG,CAACyB,GAAG,CAAC,GAAG,CAAC,CAE/B;AACAC,mBAAmB,CAAEA,CAAA,GAAM1B,GAAG,CAACyB,GAAG,CAAC,wBAAwB,CAAC,CAC5DE,mBAAmB,CAAEA,CAAA,GAAM3B,GAAG,CAACyB,GAAG,CAAC,iCAAiC,CAAC,CACrEG,mBAAmB,CAAEA,CAAA,GAAM5B,GAAG,CAACyB,GAAG,CAAC,iCAAiC,CAAC,CACrEI,iBAAiB,CAAEA,CAAA,GAAM7B,GAAG,CAACyB,GAAG,CAAC,sBAAsB,CAAC,CAExD;AACAK,oBAAoB,CAAEA,CAAA,GAAM9B,GAAG,CAACyB,GAAG,CAAC,yBAAyB,CAAC,CAE9D;AACAM,0BAA0B,CAAEA,CAAA,GAAM/B,GAAG,CAACyB,GAAG,CAAC,+BAA+B,CAAC,CAE1E;AACAO,iBAAiB,CAAEA,CAAA,GAAMhC,GAAG,CAACyB,GAAG,CAAC,sBAAsB,CACzD,CAAC,CAED,cAAe,CAAAzB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}